// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ntbs_service.Models;

namespace ntbs_service.Migrations
{
    [DbContext(typeof(NtbsContext))]
    partial class NtbsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ntbs_service.Models.DrugResistence", b =>
                {
                    b.Property<int>("DrugResistenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NotificationId");

                    b.Property<byte>("ResistentDrugId");

                    b.HasKey("DrugResistenceId");

                    b.HasIndex("NotificationId");

                    b.HasIndex("ResistentDrugId");

                    b.ToTable("DrugResistence");
                });

            modelBuilder.Entity("ntbs_service.Models.Episode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("NotificationId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("EpisodeId");

                    b.HasIndex("NotificationId");

                    b.ToTable("Episode");
                });

            modelBuilder.Entity("ntbs_service.Models.Hospital", b =>
                {
                    b.Property<int>("HospitalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasMaxLength(200);

                    b.HasKey("HospitalId");

                    b.ToTable("Hospital");
                });

            modelBuilder.Entity("ntbs_service.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HospitalId");

                    b.Property<int>("PatientId");

                    b.HasKey("NotificationId");

                    b.HasIndex("HospitalId");

                    b.HasIndex("PatientId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("ntbs_service.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date");

                    b.Property<Guid?>("EtsId");

                    b.Property<string>("Forename")
                        .HasMaxLength(200);

                    b.Property<int?>("LtbrId");

                    b.Property<string>("NhsNumber")
                        .HasMaxLength(50);

                    b.Property<byte>("RegionId");

                    b.Property<byte>("SexId");

                    b.Property<string>("Surname")
                        .HasMaxLength(200);

                    b.Property<byte?>("UkBorn");

                    b.HasKey("PatientId");

                    b.HasIndex("RegionId");

                    b.HasIndex("SexId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("ntbs_service.Models.Region", b =>
                {
                    b.Property<byte>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasMaxLength(200);

                    b.HasKey("RegionId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("ntbs_service.Models.ResistentDrug", b =>
                {
                    b.Property<byte>("ResistentDrugId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<string>("Label")
                        .HasMaxLength(200);

                    b.HasKey("ResistentDrugId");

                    b.ToTable("ResistentDrug");
                });

            modelBuilder.Entity("ntbs_service.Models.Sex", b =>
                {
                    b.Property<byte>("SexId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasMaxLength(200);

                    b.HasKey("SexId");

                    b.ToTable("Sex");
                });

            modelBuilder.Entity("ntbs_service.Models.DrugResistence", b =>
                {
                    b.HasOne("ntbs_service.Models.Notification", "Notification")
                        .WithMany("DrugResistence")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("FK_DrugResistence_Notification");

                    b.HasOne("ntbs_service.Models.ResistentDrug", "ResistentDrug")
                        .WithMany("DrugResistence")
                        .HasForeignKey("ResistentDrugId")
                        .HasConstraintName("FK_ResistentDrug_Notification");
                });

            modelBuilder.Entity("ntbs_service.Models.Episode", b =>
                {
                    b.HasOne("ntbs_service.Models.Notification", "Notification")
                        .WithMany("Episode")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("FK_Episode_Notification");
                });

            modelBuilder.Entity("ntbs_service.Models.Notification", b =>
                {
                    b.HasOne("ntbs_service.Models.Hospital", "Hospital")
                        .WithMany("Notification")
                        .HasForeignKey("HospitalId")
                        .HasConstraintName("FK_Notification_Hospital");

                    b.HasOne("ntbs_service.Models.Patient", "Patient")
                        .WithMany("Notification")
                        .HasForeignKey("PatientId")
                        .HasConstraintName("FK_Notification_Patient");
                });

            modelBuilder.Entity("ntbs_service.Models.Patient", b =>
                {
                    b.HasOne("ntbs_service.Models.Region", "Region")
                        .WithMany("Patient")
                        .HasForeignKey("RegionId")
                        .HasConstraintName("FK_Patient_Region");

                    b.HasOne("ntbs_service.Models.Sex", "Sex")
                        .WithMany("Patient")
                        .HasForeignKey("SexId")
                        .HasConstraintName("FK_Patient_Sex");
                });
#pragma warning restore 612, 618
        }
    }
}
