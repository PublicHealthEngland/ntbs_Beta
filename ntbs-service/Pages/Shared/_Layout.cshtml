<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NTBS</title>
    <link rel="stylesheet" href="~/dist/main.css" asp-append-version="true">
</head>
<body>
    <div id="app">
        <div>
            @RenderSection("SkipLink", false)
            @* nhs-main-wrapper renders <main id="maincontent"></main> *@
            <a nhs-anchor-type="SkipLink" href="#maincontent">Skip navigation</a> 
            
            <partial name="./_Header.cshtml" />
            
            <nhs-main-wrapper classes="main-wrapper">
                @RenderBody()
            </nhs-main-wrapper>

            <partial name="./_Footer.cshtml" />
                
            <inactivity-checker> </inactivity-checker>
        </div>
        
        <vue-accessible-modal/>
    </div>

    <!-- govuk requires elements that depend on js-usage require this class to be set on the root of the document (e.g. conditionally revealling radios' sections) -->
    <script>document.body.className = ((document.body.className) ? document.body.className + ' js-enabled' : 'js-enabled');</script>
    <script src="~/dist/bundle.js" asp-append-version="true"></script>
    <script type="text/javascript">
        function toggleMenu() {
          document.getElementById("case-manager-submenu").classList.toggle("show");
        }
        
        // Close the dropdown menu if the user clicks outside of it
        window.onclick = function(event) {
          if (!event.target.matches('.dropdown-header')) {
            let dropdowns = document.getElementsByClassName("nav-menu-with-dropdown-list");
            for (let i = 0; i < dropdowns.length; i++) {
              let openDropdown = dropdowns[i];
              if (openDropdown.classList.contains('show')) {
                openDropdown.classList.remove('show');
              }
            }
          }
        }
    </script>
    @RenderSection("Scripts", false)

</body>
</html>
