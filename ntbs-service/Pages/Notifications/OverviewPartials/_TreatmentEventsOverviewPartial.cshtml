@using ntbs_service.Helpers
@using ntbs_service.Models.Enums
@model OverviewModel

@{
    var sectionSubPath = NotificationSubPaths.EditTreatmentEvents;
}

<div class="notification-overview-type-and-edit-container" id="@OverviewSubPathToAnchorMap.GetOverviewAnchorId(sectionSubPath)">
    <h3 class="notification-details-type"> Episodes </h3>
    @if (Model.PermissionLevel == PermissionLevel.Edit)
    {
        <a href="@RouteHelper.GetNotificationPath(Model.NotificationId, sectionSubPath)"
           class="notification-edit-link govuk-link--no-visited-state">
            Edit
        </a>
    }
</div>

@if (Model.GroupedTreatmentEvents.Count > 0)
{
     <div class="notification-overview-details-container">
        <div class="event-outcome-at-dates">
            @if (Model.Should12MonthOutcomeBeDisplayed)
            {
                <div>
                    <strong> Outcome at 12 months </strong> @(Model.OutcomeAt12Months?.TreatmentOutcomeType.GetDisplayName() ?? "No outcome recorded")
                </div>
            }
            
            @if (Model.Should24MonthOutcomeBeDisplayed)
            {
                <div>
                    <strong> Outcome at 24 months </strong> @(Model.OutcomeAt24Months?.TreatmentOutcomeType.GetDisplayName() ?? "No outcome recorded")
                </div>
            }
            
            @if (Model.Should36MonthOutcomeBeDisplayed)
            {
                <div>
                    <strong> Outcome at 36 months </strong> @(Model.OutcomeAt36Months?.TreatmentOutcomeType.GetDisplayName() ?? "No outcome recorded")
                </div>
            }
        </div>

        @for (var episodeNumber = 1; episodeNumber <= Model.GroupedTreatmentEvents.Count; episodeNumber++)
        {
            var treatmentEvents = Model.GroupedTreatmentEvents[episodeNumber];
            
            <div>
                <h4 class="episode-grouping-overview-heading">Episode @episodeNumber</h4>
                @if (treatmentEvents.Last().IsEpisodeEndingTreatmentEvent())
                {
                    <span>@treatmentEvents.First().FormattedEventDate - @treatmentEvents.Last().FormattedEventDate</span>
                }
                else
                {
                    <span>@treatmentEvents.First().FormattedEventDate - to Present</span>
                }
            </div>
            <nhs-table classes="nhsuk-table--reduced-font">
                <nhs-table-head>
                    <nhs-table-item classes="one-sixth-column">Date</nhs-table-item>
                    <nhs-table-item classes="two-sixth-column">Event</nhs-table-item>
                    <nhs-table-item classes="two-sixth-column">TB Service</nhs-table-item>
                    <nhs-table-item classes="one-sixth-column">Case Manager</nhs-table-item>
                </nhs-table-head>
                <nhs-table-body>
                    @foreach (var treatmentEvent in treatmentEvents)
                    {
                        <nhs-table-body-row>
                            <nhs-table-item>@treatmentEvent.FormattedEventDate</nhs-table-item>
                            <nhs-table-item>@treatmentEvent.FormattedEventTypeAndOutcome</nhs-table-item>
                            <nhs-table-item>@treatmentEvent.TbService?.Name</nhs-table-item>
                            <nhs-table-item>@treatmentEvent.CaseManager?.FullName</nhs-table-item>
                        </nhs-table-body-row>
                    }
                </nhs-table-body>
            </nhs-table>
        }
    </div>   
}