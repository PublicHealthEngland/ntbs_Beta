@model MBovisExposureToKnownCaseModel
@using NHSUK.FrontEndLibrary.TagHelpers
@using static NHSUK.FrontEndLibrary.TagHelpers.FormGroupType
@using ntbs_service.Helpers
@using ntbs_service.Models.Entities
@using ntbs_service.Models.Enums

<div class="table-row-form">
    <nhs-width-container container-width="Standard">

        <partial name="Notifications/Edit/_SinglePageErrorSummaryPartial"/>

        <h2> M. bovis - @(Model.RowId == null ? "Add new " : "Edit ") exposure to known case </h2>

        <form method="post" autocomplete="off">

            <nhs-grid-row>
                <nhs-grid-column grid-column-width="OneHalf">
                    @{
                        var hasYearError = !Model.IsValid($"{nameof(Model.MBovisExposureToKnownCase)}.{nameof(Model.MBovisExposureToKnownCase.YearOfExposure)}");
                        var yearErrorGroupState = hasYearError ? Error : Standard;
                    }
                    <validate-input model="@nameof(MBovisExposureToKnownCase)" property="@nameof(MBovisExposureToKnownCase.YearOfExposure)" inline-template>
                        <nhs-form-group
                            id="@($"{nameof(MBovisExposureToKnownCase)}-{nameof(MBovisExposureToKnownCase.YearOfExposure)}")"
                            nhs-form-group-type="@yearErrorGroupState"
                            aria-describedby="year-of-exposure-error">
                            <label nhs-label-type="Standard" asp-for="MBovisExposureToKnownCase.YearOfExposure">
                                @Html.DisplayNameFor(m => m.MBovisExposureToKnownCase.YearOfExposure)
                            </label>
                            <span
                                id="year-of-exposure-error"
                                nhs-span-type="ErrorMessage"
                                ref="errorField"
                                asp-validation-for="MBovisExposureToKnownCase.YearOfExposure"
                                has-error="@hasYearError">
                            </span>
                            <input
                                nhs-input-type="Standard"
                                type="number"
                                ref="inputField"
                                asp-for="MBovisExposureToKnownCase.YearOfExposure"
                                v-on:blur="validate"
                                fixed-width="Four">
                        </nhs-form-group>
                    </validate-input>

                    @{
                        var hasExposureSettingError = !Model.IsValid($"{nameof(Model.MBovisExposureToKnownCase)}.{nameof(Model.MBovisExposureToKnownCase.ExposureSetting)}");
                        var exposureSettingGroupState = hasExposureSettingError ? Error : Standard;
                    }
                    <validate-input model="@nameof(MBovisExposureToKnownCase)" property="@nameof(MBovisExposureToKnownCase.ExposureSetting)" inline-template>
                        <nhs-form-group
                            id="@($"{nameof(MBovisExposureToKnownCase)}-{nameof(MBovisExposureToKnownCase.ExposureSetting)}")"
                            nhs-form-group-type="@exposureSettingGroupState"
                            aria-describedby="exposure-setting-error">
                            <label nhs-label-type="Standard" asp-for="MBovisExposureToKnownCase.ExposureSetting">
                                @Html.DisplayNameFor(m => m.MBovisExposureToKnownCase.ExposureSetting)
                            </label>
                            <span
                                id="exposure-setting-error"
                                nhs-span-type="ErrorMessage"
                                has-error="@hasExposureSettingError"
                                asp-validation-for="MBovisExposureToKnownCase.ExposureSetting"
                                ref="errorField">
                            </span>
                            <select
                                nhs-select-type="@(hasExposureSettingError ? SelectType.Error : SelectType.Standard)"
                                asp-for="MBovisExposureToKnownCase.ExposureSetting"
                                asp-items="Html.GetEnumSelectList<ExposureSetting>()"
                                ref="selectField"
                                v-on:change="validate">
                                <option value="">Please select</option>
                            </select>
                        </nhs-form-group>
                    </validate-input>
                </nhs-grid-column>

                <nhs-grid-column grid-column-width="OneHalf">
                    @{
                        var hasRelatedNotificationError = !Model.IsValid($"{nameof(Model.MBovisExposureToKnownCase)}.{nameof(Model.MBovisExposureToKnownCase.ExposureNotificationId)}");
                        var relatedNotificationGroupState = hasRelatedNotificationError ? Error : Standard;
                    }
                    <validate-related-notification model="@nameof(Model.MBovisExposureToKnownCase)" inline-template>
                        <nhs-form-group
                            id="@($"{nameof(MBovisExposureToKnownCase)}-{nameof(MBovisExposureToKnownCase.ExposureNotificationId)}")"
                            nhs-form-group-type="@relatedNotificationGroupState"
                            aria-describedby="related-notification-error">
                            <label nhs-label-type="Standard" asp-for="MBovisExposureToKnownCase.ExposureNotificationId">
                                @Html.DisplayNameFor(m => m.MBovisExposureToKnownCase.ExposureNotificationId)
                            </label>
                            <span
                                id="related-notification-error"
                                nhs-span-type="ErrorMessage"
                                ref="errorField"
                                has-error="@hasRelatedNotificationError"
                                asp-validation-for="MBovisExposureToKnownCase.ExposureNotificationId">
                            </span>
                            <input
                                ref="inputField"
                                v-on:blur="validate"
                                is-error-input="@hasRelatedNotificationError"
                                nhs-input-type="Standard"
                                fixed-width="Ten"
                                asp-for="MBovisExposureToKnownCase.ExposureNotificationId"
                                type="number">
                            <notification-info v-if="isValid" v-bind:notification-info="relatedNotification"></notification-info>
                        </nhs-form-group>
                    </validate-related-notification>
                </nhs-grid-column>

                <nhs-grid-column grid-column-width="Full">
                    @{
                        var hasOtherDetailsError = !Model.IsValid($"{nameof(Model.MBovisExposureToKnownCase)}.{nameof(Model.MBovisExposureToKnownCase.OtherDetails)}");
                        var otherDetailsGroupState = hasOtherDetailsError ? Error : Standard;
                        var otherDetailsTextAreaType = hasOtherDetailsError ? TextAreaType.Error : TextAreaType.Standard;
                    }
                    <validate-input model="@nameof(MBovisExposureToKnownCase)" property="@nameof(MBovisExposureToKnownCase.OtherDetails)" inline-template>
                        <nhs-form-group
                            id="@($"{nameof(MBovisExposureToKnownCase)}-{nameof(MBovisExposureToKnownCase.OtherDetails)}")"
                            nhs-form-group-type="@otherDetailsGroupState"
                            aria-describedby="other-details-error">
                            <label nhs-label-type="Standard" asp-for="MBovisExposureToKnownCase.OtherDetails">
                                @Html.DisplayNameFor(m => m.MBovisExposureToKnownCase.OtherDetails)
                            </label>
                            <span
                                id="other-details-error"
                                nhs-span-type="ErrorMessage"
                                ref="errorField"
                                asp-validation-for="MBovisExposureToKnownCase.OtherDetails"
                                has-error="@hasOtherDetailsError">
                            </span>
                            <textarea
                                  asp-for="MBovisExposureToKnownCase.OtherDetails"
                                  v-on:change="validate"
                                  ref="textareaField"
                                  nhs-textarea-type="@otherDetailsTextAreaType"
                                  rows="2"
                                  classes="nhsuk-input--width-30"> </textarea>
                        </nhs-form-group>
                    </validate-input>
                </nhs-grid-column>
            </nhs-grid-row>

            <button id="save-button" nhs-button-type="Standard" classes="ntbsuk-button--primary">
                Save
            </button>
            @if (Model.RowId != null)
            {
                <button id="delete-button"
                        asp-page-handler="Delete"
                        nhs-button-type="Standard"
                        classes="ntbsuk-button--secondary">
                    Delete
                </button>
            }
        </form>
    </nhs-width-container>
</div>
<nhs-width-container container-width="Standard">
    <h2> Exposure to known cases </h2>

    <partial name="Shared/_MBovisExposureToKnownCaseTable" for="Notification.MBovisDetails.MBovisExposureToKnownCases"/>

    <a href="@RouteHelper.GetNotificationPath(Model.NotificationId, NotificationSubPaths.EditMBovisExposureToKnownCases)">
        Back to M. bovis exposure to known cases
    </a>
</nhs-width-container>