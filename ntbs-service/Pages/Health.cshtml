@page
@model ntbs_service.Pages.Health

@functions {
        private const string Tick = "\u2714\ufe0f";
        private const string Cross = "\u274c\ufe0f";
}

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>NTBS - Status page</title>
</head>
<body>
<div>
    <div>
        <h1>Release</h1>
        Release: @Model.Release
    </div>

    <div>
        <h2>Environment</h2>
        <div>Environment: <code>@Model.EnvironmentName</code></div>
        <div>Read Only User Group Name: <code>@Model.ReadOnlyUserGroupName</code></div>
    </div>

    <div>
        <h2>Optional modules</h2>
        <div>Audit: @(Model.AuditEnabled ? Tick : Cross)</div>
        <div>Cluster matching: @(Model.ClusterMatchingEnabled ? Tick : Cross)</div>
        <div>Reference lab results: @(Model.ReferenceLabResultsEnabled ? Tick : Cross)</div>
        <div>Reporting services: @(Model.ReportingServicesEnabled ? Tick : Cross)</div>
        <div>Application insights: @(Model.ApplicationInsightsEnabled ? Tick : Cross)</div>
    </div>

    <div>
        <h2>Scheduled Jobs Configuration</h2>

        <div>
            User sync job:
            @if (Model.ScheduledJobsConfig.UserSyncEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.UserSyncCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Close inactive notifications job:
            @if (Model.ScheduledJobsConfig.CloseInactiveNotificationsEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.CloseInactiveNotificationsCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Drug resistance profile update job:
            @if (Model.ScheduledJobsConfig.DrugResistanceProfileUpdateEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.DrugResistanceProfileUpdateCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Unmatched lab result alerts job:
            @if (Model.ScheduledJobsConfig.UnmatchedLabResultAlertsEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.UnmatchedLabResultAlertsCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Data quality alerts job:
            @if (Model.ScheduledJobsConfig.DataQualityAlertsEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.DataQualityAlertsCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Notification cluster update job:
            @if (Model.ScheduledJobsConfig.NotificationClusterUpdateEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.NotificationClusterUpdateCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Mark migrated notifications as imported:
            @if (Model.ScheduledJobsConfig.MarkImportedNotificationsAsImportedEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.MarkImportedNotificationsAsImportedCron</span>
            }
            else
            {
                @Cross
            }
        </div>

        <div>
            Update table counts:
            @if (Model.ScheduledJobsConfig.UpdateTableCountsJobEnabled)
            {
                @Tick
                <span>Cron: @Model.ScheduledJobsConfig.UpdateTableCountsJobCron</span>
            }
            else
            {
                @Cross
            }
        </div>
    </div>

</div>
</body>
</html>
