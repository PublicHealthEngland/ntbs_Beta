@page
@model ntbs_service.Pages_Search.IndexModel
@using static NHSUK.FrontEndLibrary.TagHelpers.FormGroupType
@using Microsoft.AspNetCore.Routing

@{
    ViewData["Title"] = "Search";
    Layout = "../Shared/_NoForm_Layout.cshtml";
}

<h1>Search</h1>
<div>
    <form method="get">
        <div asp-validation-summary="ModelOnly"></div>
        <div style="padding-bottom: 15px">
            To search enter at least one of the following fields
        </div>
        <nhs-grid-row>
            <nhs-grid-column grid-column-width="OneQuarter">
                @{
                    var IdFilterError = !Model.IsValid("IdFilter");
                    var IdFilterGroupState = IdFilterError ? Error : Standard;
                }
                <nhs-form-group nhs-form-group-type=@IdFilterGroupState v-bind:class="{ 'nhsuk-form-group--error': hasError}">
                    <label nhs-label-type="Standard"> ID number </label>
                    <span class="nhsuk-hint " id="example-hint">
                        Search by NTBS, ETS, LTBR or NHS number
                    </span>
                    <span ref="errorField" nhs-span-type="ErrorMessage" id="id-error"
                        asp-validation-for="IdFilter"></span>
                    <input v-on:blur="validate" is-error-input=@IdFilterError nhs-input-type="Standard"
                        asp-for="IdFilter" classes="nhsuk-input--width-10"
                        v-bind:class="{ 'nhsuk-input--error': hasError}" />
                </nhs-form-group>
            </nhs-grid-column>
        </nhs-grid-row>
        <div style="display: flex">
            <input type="submit" value="Search" class="nhsuk-button" style="margin-left: auto; margin-bottom: 0"/>
        </div>
    </form>
</div>
<hr />
<div>
    <div class="clear-search-button-container">
        <a href="/search" class="clear-search-button">
            Clear search & start again
        </a>
    </div>
    <div>
        @{ var resultCount = Model.SearchResultsBannerDisplay?.NumberOfResults ?? 0; }
        <p> @resultCount Results found. </p>
        <p> To filter results, add more search terms and search again. </p>
    </div>
    @if(@Model.SearchResultsBannerDisplay != null) 
    {

        <ol class="search-results-list">
            @foreach(var result in @Model.SearchResultsBannerDisplay) 
            {
                <li>
                    <partial name="../Shared/_NotificationBanner.cshtml" model="result"/>
                </li>
            }
        </ol>
    }

    <nav class="nhsuk-pagination" role="navigation" aria-label="Pagination">
        <ul class="nhsuk-list nhsuk-pagination__list">
            @{

                var previousPageText = "";
                var previousPageUrl = "";
                var nextPageText = "";
                var nextPageUrl = "";
                var queryString = Request.Query;
                var previousPageQueryString = new RouteValueDictionary();
                queryString.Keys.Select(x => previousPageQueryString[x] = queryString[x].ToString());
                var nextPageQueryString = previousPageQueryString;
                if(@Model.SearchResultsBannerDisplay?.HasPreviousPage ?? false)
                {
                    previousPageText = "Page " + (Model.SearchResultsBannerDisplay.PageIndex - 1) + " of " + (Model.SearchResultsBannerDisplay.TotalPages);
                    previousPageQueryString["pageIndex"] = "" + (Model.SearchResultsBannerDisplay.PageIndex - 1);
                    previousPageUrl = @Url.Action("Search", previousPageQueryString);
                }
                if(@Model.SearchResultsBannerDisplay?.HasNextPage ?? false)
                {
                    nextPageText = "Page " + (Model.SearchResultsBannerDisplay.PageIndex + 1) + " of " + (Model.SearchResultsBannerDisplay.TotalPages);
                    nextPageQueryString["pageIndex"] = "" + (Model.SearchResultsBannerDisplay.PageIndex + 1);
                    nextPageUrl = @Url.Action("Search", nextPageQueryString);
                }
            }
            <nhs-pagination next-link-text="@nextPageText" next-url="@nextPageUrl" 
                previous-link-text="@previousPageText" previous-url="@previousPageUrl"></nhs-pagination>
        </ul>
    </nav>
</div>

@if(@Model.DisplayCreateNotification ?? false) 
{
    @section ActionsAside 
    {
        <a href="/Notifications/Create" role="button" draggable="false" class="nhsuk-button search-notifications-button">
            Create Notification
        </a>
    }
}