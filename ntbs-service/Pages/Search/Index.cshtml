@page
@model ntbs_service.Pages_Search.IndexModel
@using static NHSUK.FrontEndLibrary.TagHelpers.FormGroupType
@using Microsoft.AspNetCore.Routing

@{
    ViewData["Title"] = "Search";
    Layout = "../Shared/_NoForm_Layout.cshtml";
}

<h1>Search</h1>
<div>
    <form method="get">
        <div asp-validation-summary="ModelOnly"></div>
        <div class="enter-search-details-tip">
            To search enter at least one of the following fields
        </div>
        <nhs-grid-row>
            <nhs-grid-column grid-column-width="OneQuarter">
                @{
                    var IdFilterError = !Model.IsValid("IdFilter");
                    var IdFilterGroupState = IdFilterError ? Error : Standard;
                }
                <nhs-form-group nhs-form-group-type=@IdFilterGroupState v-bind:class="{ 'nhsuk-form-group--error': hasError}">
                    <label nhs-label-type="Standard"> ID number </label>
                    <span class="nhsuk-hint " id="example-hint">
                        Search by NTBS, ETS, LTBR or NHS number
                    </span>
                    <span ref="errorField" nhs-span-type="ErrorMessage" id="id-error"
                        asp-validation-for="IdFilter"></span>
                    <input v-on:blur="validate" is-error-input=@IdFilterError nhs-input-type="Standard"
                        asp-for="IdFilter" classes="nhsuk-input--width-10"
                        v-bind:class="{ 'nhsuk-input--error': hasError}" />
                </nhs-form-group>
            </nhs-grid-column>
            <nhs-grid-column grid-column-width="OneQuarter">
                @{
                    var DobError = !Model.IsValid("Dob");
                    var DobGroupState = DobError ? Error : Standard;
                }
                <nhs-form-group nhs-form-group-type=@DobGroupState v-bind:class="{ 'nhsuk-form-group--error': hasError}">
                    <label nhs-label-type="Standard"> Date of birth </label>
                    <span class="nhsuk-hint " id="example-hint">
                        Dates can be partial, enter year at minimum
                    </span>
                    <span ref="errorField" nhs-span-type="ErrorMessage" id="dob-error"
                        asp-validation-for="Dov"></span>
                    <input v-on:blur="validate" is-error-input=@DobError nhs-input-type="Standard"
                        asp-for="Dov" classes="nhsuk-input--width-10"
                        v-bind:class="{ 'nhsuk-input--error': hasError}" />
                </nhs-form-group>
            </nhs-grid-column>
        </nhs-grid-row>
        <div class="enter-search-details-tip">
            Advanced options
        </div>
        <nhs-grid-row>
            <nhs-grid-column grid-column-width="OneQuarter">
                @{
                    var SexIdError = !Model.IsValid("SexId");
                    var SexIdGroupState = SexIdError ? Error : Standard;
                }
                <nhs-form-group nhs-form-group-type=@SexIdGroupState v-bind:class="{ 'nhsuk-form-group--error': hasError}">
                    <label nhs-label-type="Standard"> Sex </label>
                    <span ref="errorField" nhs-span-type="ErrorMessage" id="sexId-error"
                        asp-validation-for="SexId"></span>
                    <nhs-radios v-on:change="validate" nhs-radios-type="Standard">
                        @foreach (var sex in Model.Sexes)
                        {
                            <nhs-radios-item>
                                <input is-error-input=@SexError nhs-input-type="Radios" asp-for="SexId" type="radio" value="@sex.SexId" />
                                <label nhs-label-type="Radios" asp-for="SexId">@sex.Label</label>
                            </nhs-radios-item>
                        }
                    </nhs-radios>
                </nhs-form-group>
            </nhs-grid-column>
        </nhs-grid-row>
        <div class="submit-search-button-container">
            <input type="submit" value="Search" class="nhsuk-button submit-search-button"/>
        </div>
    </form>
</div>
<hr />
@if(Model.SearchParamsExist ?? false) 
{
    <div>
        <div class="clear-search-button-container">
            <a href="/search" class="clear-search-button">
                Clear search & start again
            </a>
        </div>
        <div>
            @{ var resultCount = Model.SearchResults?.NumberOfResults ?? 0; }
            <p> @resultCount Results found. </p>
            <p> To filter results, add more search terms and search again. </p>
        </div>
        @if(Model.SearchResults != null) 
        {
            <ol class="search-results-list">
                @foreach(var result in @Model.SearchResults) 
                {
                    <li>
                        <partial name="../Shared/_NotificationBanner.cshtml" model="result"/>
                    </li>
                }
            </ol>
        }

        <nav class="nhsuk-pagination" role="navigation" aria-label="Pagination">
            <ul class="nhsuk-list nhsuk-pagination__list">
                <nhs-pagination next-link-text="@Model.NextPageText" next-url="@Model.NextPageUrl" 
                    previous-link-text="@Model.PreviousPageText" previous-url="@Model.PreviousPageUrl"></nhs-pagination>
            </ul>
        </nav>
    </div>

    @section ActionsAside 
    {
        <a href="/Notifications/Create" role="button" draggable="false" class="nhsuk-button search-notifications-button">
            Create Notification
        </a>
    }
}